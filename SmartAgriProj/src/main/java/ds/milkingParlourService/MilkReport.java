// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MilkingParlourService.proto

package ds.milkingParlourService;

/**
 * Protobuf type {@code milkingParlourService.MilkReport}
 */
public  final class MilkReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:milkingParlourService.MilkReport)
    MilkReportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MilkReport.newBuilder() to construct.
  private MilkReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MilkReport() {
    reportDate_ = "";
    volumeLitres_ = 0F;
    heatedTemperature_ = 0F;
    heatedDuration_ = 0F;
    chilledTemperature_ = 0F;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MilkReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            reportDate_ = s;
            break;
          }
          case 18: {
            ds.milkingParlourService.MachineTimeSpan.Builder subBuilder = null;
            if (reportTimeSpan_ != null) {
              subBuilder = reportTimeSpan_.toBuilder();
            }
            reportTimeSpan_ = input.readMessage(ds.milkingParlourService.MachineTimeSpan.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(reportTimeSpan_);
              reportTimeSpan_ = subBuilder.buildPartial();
            }

            break;
          }
          case 29: {

            volumeLitres_ = input.readFloat();
            break;
          }
          case 37: {

            heatedTemperature_ = input.readFloat();
            break;
          }
          case 45: {

            heatedDuration_ = input.readFloat();
            break;
          }
          case 53: {

            chilledTemperature_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ds.milkingParlourService.MilkingParlourServiceImpl.internal_static_milkingParlourService_MilkReport_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ds.milkingParlourService.MilkingParlourServiceImpl.internal_static_milkingParlourService_MilkReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ds.milkingParlourService.MilkReport.class, ds.milkingParlourService.MilkReport.Builder.class);
  }

  public static final int REPORTDATE_FIELD_NUMBER = 1;
  private volatile java.lang.Object reportDate_;
  /**
   * <code>string reportDate = 1;</code>
   */
  public java.lang.String getReportDate() {
    java.lang.Object ref = reportDate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      reportDate_ = s;
      return s;
    }
  }
  /**
   * <code>string reportDate = 1;</code>
   */
  public com.google.protobuf.ByteString
      getReportDateBytes() {
    java.lang.Object ref = reportDate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      reportDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPORTTIMESPAN_FIELD_NUMBER = 2;
  private ds.milkingParlourService.MachineTimeSpan reportTimeSpan_;
  /**
   * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
   */
  public boolean hasReportTimeSpan() {
    return reportTimeSpan_ != null;
  }
  /**
   * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
   */
  public ds.milkingParlourService.MachineTimeSpan getReportTimeSpan() {
    return reportTimeSpan_ == null ? ds.milkingParlourService.MachineTimeSpan.getDefaultInstance() : reportTimeSpan_;
  }
  /**
   * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
   */
  public ds.milkingParlourService.MachineTimeSpanOrBuilder getReportTimeSpanOrBuilder() {
    return getReportTimeSpan();
  }

  public static final int VOLUMELITRES_FIELD_NUMBER = 3;
  private float volumeLitres_;
  /**
   * <code>float volumeLitres = 3;</code>
   */
  public float getVolumeLitres() {
    return volumeLitres_;
  }

  public static final int HEATEDTEMPERATURE_FIELD_NUMBER = 4;
  private float heatedTemperature_;
  /**
   * <code>float heatedTemperature = 4;</code>
   */
  public float getHeatedTemperature() {
    return heatedTemperature_;
  }

  public static final int HEATEDDURATION_FIELD_NUMBER = 5;
  private float heatedDuration_;
  /**
   * <code>float heatedDuration = 5;</code>
   */
  public float getHeatedDuration() {
    return heatedDuration_;
  }

  public static final int CHILLEDTEMPERATURE_FIELD_NUMBER = 6;
  private float chilledTemperature_;
  /**
   * <code>float chilledTemperature = 6;</code>
   */
  public float getChilledTemperature() {
    return chilledTemperature_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getReportDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, reportDate_);
    }
    if (reportTimeSpan_ != null) {
      output.writeMessage(2, getReportTimeSpan());
    }
    if (volumeLitres_ != 0F) {
      output.writeFloat(3, volumeLitres_);
    }
    if (heatedTemperature_ != 0F) {
      output.writeFloat(4, heatedTemperature_);
    }
    if (heatedDuration_ != 0F) {
      output.writeFloat(5, heatedDuration_);
    }
    if (chilledTemperature_ != 0F) {
      output.writeFloat(6, chilledTemperature_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getReportDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, reportDate_);
    }
    if (reportTimeSpan_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getReportTimeSpan());
    }
    if (volumeLitres_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, volumeLitres_);
    }
    if (heatedTemperature_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, heatedTemperature_);
    }
    if (heatedDuration_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, heatedDuration_);
    }
    if (chilledTemperature_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, chilledTemperature_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ds.milkingParlourService.MilkReport)) {
      return super.equals(obj);
    }
    ds.milkingParlourService.MilkReport other = (ds.milkingParlourService.MilkReport) obj;

    boolean result = true;
    result = result && getReportDate()
        .equals(other.getReportDate());
    result = result && (hasReportTimeSpan() == other.hasReportTimeSpan());
    if (hasReportTimeSpan()) {
      result = result && getReportTimeSpan()
          .equals(other.getReportTimeSpan());
    }
    result = result && (
        java.lang.Float.floatToIntBits(getVolumeLitres())
        == java.lang.Float.floatToIntBits(
            other.getVolumeLitres()));
    result = result && (
        java.lang.Float.floatToIntBits(getHeatedTemperature())
        == java.lang.Float.floatToIntBits(
            other.getHeatedTemperature()));
    result = result && (
        java.lang.Float.floatToIntBits(getHeatedDuration())
        == java.lang.Float.floatToIntBits(
            other.getHeatedDuration()));
    result = result && (
        java.lang.Float.floatToIntBits(getChilledTemperature())
        == java.lang.Float.floatToIntBits(
            other.getChilledTemperature()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REPORTDATE_FIELD_NUMBER;
    hash = (53 * hash) + getReportDate().hashCode();
    if (hasReportTimeSpan()) {
      hash = (37 * hash) + REPORTTIMESPAN_FIELD_NUMBER;
      hash = (53 * hash) + getReportTimeSpan().hashCode();
    }
    hash = (37 * hash) + VOLUMELITRES_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getVolumeLitres());
    hash = (37 * hash) + HEATEDTEMPERATURE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getHeatedTemperature());
    hash = (37 * hash) + HEATEDDURATION_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getHeatedDuration());
    hash = (37 * hash) + CHILLEDTEMPERATURE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChilledTemperature());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ds.milkingParlourService.MilkReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.milkingParlourService.MilkReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ds.milkingParlourService.MilkReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ds.milkingParlourService.MilkReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ds.milkingParlourService.MilkReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code milkingParlourService.MilkReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:milkingParlourService.MilkReport)
      ds.milkingParlourService.MilkReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ds.milkingParlourService.MilkingParlourServiceImpl.internal_static_milkingParlourService_MilkReport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ds.milkingParlourService.MilkingParlourServiceImpl.internal_static_milkingParlourService_MilkReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ds.milkingParlourService.MilkReport.class, ds.milkingParlourService.MilkReport.Builder.class);
    }

    // Construct using ds.milkingParlourService.MilkReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      reportDate_ = "";

      if (reportTimeSpanBuilder_ == null) {
        reportTimeSpan_ = null;
      } else {
        reportTimeSpan_ = null;
        reportTimeSpanBuilder_ = null;
      }
      volumeLitres_ = 0F;

      heatedTemperature_ = 0F;

      heatedDuration_ = 0F;

      chilledTemperature_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ds.milkingParlourService.MilkingParlourServiceImpl.internal_static_milkingParlourService_MilkReport_descriptor;
    }

    @java.lang.Override
    public ds.milkingParlourService.MilkReport getDefaultInstanceForType() {
      return ds.milkingParlourService.MilkReport.getDefaultInstance();
    }

    @java.lang.Override
    public ds.milkingParlourService.MilkReport build() {
      ds.milkingParlourService.MilkReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ds.milkingParlourService.MilkReport buildPartial() {
      ds.milkingParlourService.MilkReport result = new ds.milkingParlourService.MilkReport(this);
      result.reportDate_ = reportDate_;
      if (reportTimeSpanBuilder_ == null) {
        result.reportTimeSpan_ = reportTimeSpan_;
      } else {
        result.reportTimeSpan_ = reportTimeSpanBuilder_.build();
      }
      result.volumeLitres_ = volumeLitres_;
      result.heatedTemperature_ = heatedTemperature_;
      result.heatedDuration_ = heatedDuration_;
      result.chilledTemperature_ = chilledTemperature_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ds.milkingParlourService.MilkReport) {
        return mergeFrom((ds.milkingParlourService.MilkReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ds.milkingParlourService.MilkReport other) {
      if (other == ds.milkingParlourService.MilkReport.getDefaultInstance()) return this;
      if (!other.getReportDate().isEmpty()) {
        reportDate_ = other.reportDate_;
        onChanged();
      }
      if (other.hasReportTimeSpan()) {
        mergeReportTimeSpan(other.getReportTimeSpan());
      }
      if (other.getVolumeLitres() != 0F) {
        setVolumeLitres(other.getVolumeLitres());
      }
      if (other.getHeatedTemperature() != 0F) {
        setHeatedTemperature(other.getHeatedTemperature());
      }
      if (other.getHeatedDuration() != 0F) {
        setHeatedDuration(other.getHeatedDuration());
      }
      if (other.getChilledTemperature() != 0F) {
        setChilledTemperature(other.getChilledTemperature());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ds.milkingParlourService.MilkReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ds.milkingParlourService.MilkReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object reportDate_ = "";
    /**
     * <code>string reportDate = 1;</code>
     */
    public java.lang.String getReportDate() {
      java.lang.Object ref = reportDate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reportDate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string reportDate = 1;</code>
     */
    public com.google.protobuf.ByteString
        getReportDateBytes() {
      java.lang.Object ref = reportDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reportDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string reportDate = 1;</code>
     */
    public Builder setReportDate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      reportDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string reportDate = 1;</code>
     */
    public Builder clearReportDate() {
      
      reportDate_ = getDefaultInstance().getReportDate();
      onChanged();
      return this;
    }
    /**
     * <code>string reportDate = 1;</code>
     */
    public Builder setReportDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      reportDate_ = value;
      onChanged();
      return this;
    }

    private ds.milkingParlourService.MachineTimeSpan reportTimeSpan_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        ds.milkingParlourService.MachineTimeSpan, ds.milkingParlourService.MachineTimeSpan.Builder, ds.milkingParlourService.MachineTimeSpanOrBuilder> reportTimeSpanBuilder_;
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public boolean hasReportTimeSpan() {
      return reportTimeSpanBuilder_ != null || reportTimeSpan_ != null;
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public ds.milkingParlourService.MachineTimeSpan getReportTimeSpan() {
      if (reportTimeSpanBuilder_ == null) {
        return reportTimeSpan_ == null ? ds.milkingParlourService.MachineTimeSpan.getDefaultInstance() : reportTimeSpan_;
      } else {
        return reportTimeSpanBuilder_.getMessage();
      }
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public Builder setReportTimeSpan(ds.milkingParlourService.MachineTimeSpan value) {
      if (reportTimeSpanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reportTimeSpan_ = value;
        onChanged();
      } else {
        reportTimeSpanBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public Builder setReportTimeSpan(
        ds.milkingParlourService.MachineTimeSpan.Builder builderForValue) {
      if (reportTimeSpanBuilder_ == null) {
        reportTimeSpan_ = builderForValue.build();
        onChanged();
      } else {
        reportTimeSpanBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public Builder mergeReportTimeSpan(ds.milkingParlourService.MachineTimeSpan value) {
      if (reportTimeSpanBuilder_ == null) {
        if (reportTimeSpan_ != null) {
          reportTimeSpan_ =
            ds.milkingParlourService.MachineTimeSpan.newBuilder(reportTimeSpan_).mergeFrom(value).buildPartial();
        } else {
          reportTimeSpan_ = value;
        }
        onChanged();
      } else {
        reportTimeSpanBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public Builder clearReportTimeSpan() {
      if (reportTimeSpanBuilder_ == null) {
        reportTimeSpan_ = null;
        onChanged();
      } else {
        reportTimeSpan_ = null;
        reportTimeSpanBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public ds.milkingParlourService.MachineTimeSpan.Builder getReportTimeSpanBuilder() {
      
      onChanged();
      return getReportTimeSpanFieldBuilder().getBuilder();
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    public ds.milkingParlourService.MachineTimeSpanOrBuilder getReportTimeSpanOrBuilder() {
      if (reportTimeSpanBuilder_ != null) {
        return reportTimeSpanBuilder_.getMessageOrBuilder();
      } else {
        return reportTimeSpan_ == null ?
            ds.milkingParlourService.MachineTimeSpan.getDefaultInstance() : reportTimeSpan_;
      }
    }
    /**
     * <code>.milkingParlourService.MachineTimeSpan reportTimeSpan = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ds.milkingParlourService.MachineTimeSpan, ds.milkingParlourService.MachineTimeSpan.Builder, ds.milkingParlourService.MachineTimeSpanOrBuilder> 
        getReportTimeSpanFieldBuilder() {
      if (reportTimeSpanBuilder_ == null) {
        reportTimeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ds.milkingParlourService.MachineTimeSpan, ds.milkingParlourService.MachineTimeSpan.Builder, ds.milkingParlourService.MachineTimeSpanOrBuilder>(
                getReportTimeSpan(),
                getParentForChildren(),
                isClean());
        reportTimeSpan_ = null;
      }
      return reportTimeSpanBuilder_;
    }

    private float volumeLitres_ ;
    /**
     * <code>float volumeLitres = 3;</code>
     */
    public float getVolumeLitres() {
      return volumeLitres_;
    }
    /**
     * <code>float volumeLitres = 3;</code>
     */
    public Builder setVolumeLitres(float value) {
      
      volumeLitres_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float volumeLitres = 3;</code>
     */
    public Builder clearVolumeLitres() {
      
      volumeLitres_ = 0F;
      onChanged();
      return this;
    }

    private float heatedTemperature_ ;
    /**
     * <code>float heatedTemperature = 4;</code>
     */
    public float getHeatedTemperature() {
      return heatedTemperature_;
    }
    /**
     * <code>float heatedTemperature = 4;</code>
     */
    public Builder setHeatedTemperature(float value) {
      
      heatedTemperature_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float heatedTemperature = 4;</code>
     */
    public Builder clearHeatedTemperature() {
      
      heatedTemperature_ = 0F;
      onChanged();
      return this;
    }

    private float heatedDuration_ ;
    /**
     * <code>float heatedDuration = 5;</code>
     */
    public float getHeatedDuration() {
      return heatedDuration_;
    }
    /**
     * <code>float heatedDuration = 5;</code>
     */
    public Builder setHeatedDuration(float value) {
      
      heatedDuration_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float heatedDuration = 5;</code>
     */
    public Builder clearHeatedDuration() {
      
      heatedDuration_ = 0F;
      onChanged();
      return this;
    }

    private float chilledTemperature_ ;
    /**
     * <code>float chilledTemperature = 6;</code>
     */
    public float getChilledTemperature() {
      return chilledTemperature_;
    }
    /**
     * <code>float chilledTemperature = 6;</code>
     */
    public Builder setChilledTemperature(float value) {
      
      chilledTemperature_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float chilledTemperature = 6;</code>
     */
    public Builder clearChilledTemperature() {
      
      chilledTemperature_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:milkingParlourService.MilkReport)
  }

  // @@protoc_insertion_point(class_scope:milkingParlourService.MilkReport)
  private static final ds.milkingParlourService.MilkReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ds.milkingParlourService.MilkReport();
  }

  public static ds.milkingParlourService.MilkReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MilkReport>
      PARSER = new com.google.protobuf.AbstractParser<MilkReport>() {
    @java.lang.Override
    public MilkReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MilkReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MilkReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MilkReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ds.milkingParlourService.MilkReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

